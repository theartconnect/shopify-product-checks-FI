name: Shopify Product Checks

on:
  schedule:
    # every 10 minutes: 00,10,20,30,40,50
    - cron: "*/10 * * * *"

permissions:
  contents: read

env:
  # Optional repo Variables (Settings → Secrets and variables → Actions → Variables)
  # If you don't set them, the gate step below uses safe defaults.
  SHOPIFY_API_VERSION: ${{ vars.SHOPIFY_API_VERSION }}   # optional; index.js defaults to 2025-07
  DRY_RUN: ${{ vars.DRY_RUN }}                           # optional: 'true' or 'false'
  SHOPIFY_LOG_GRAPHQL_COSTS: ${{ vars.SHOPIFY_LOG_GRAPHQL_COSTS }}  # optional: 'true'
  QUIET_START_IST: ${{ vars.QUIET_START_IST }}           # e.g. 23
  QUIET_END_IST: ${{ vars.QUIET_END_IST }}               # e.g. 8

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 55

    steps:
      - name: Show trigger info
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "sha=${{ github.sha }}"

      - name: Check out repo
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      # Quiet-hours only (Asia/Kolkata). No frequency gate anymore.
      - name: Quiet-hours gate (IST only)
        id: gate
        shell: bash
        run: |
          QUIET_START_IST="${QUIET_START_IST:-23}"  # default: quiet from 23:00…
          QUIET_END_IST="${QUIET_END_IST:-8}"      # …to 08:00 (runs in daytime)

          echo "QUIET_START_IST=$QUIET_START_IST"
          echo "QUIET_END_IST=$QUIET_END_IST"

          IST_HOUR=$(TZ=Asia/Kolkata date +%H)
          echo "Current IST hour=$IST_HOUR"

          QUIET=0
          if [ "$QUIET_START_IST" -le "$QUIET_END_IST" ]; then
            # same-day window [START, END)
            if [ "$IST_HOUR" -ge "$QUIET_START_IST" ] && [ "$IST_HOUR" -lt "$QUIET_END_IST" ]; then QUIET=1; fi
          else
            # overnight window (e.g., 23 → 08)
            if [ "$IST_HOUR" -ge "$QUIET_START_IST" ] || [ "$IST_HOUR" -lt "$QUIET_END_IST" ]; then QUIET=1; fi
          fi

          if [ "$QUIET" -eq 1 ]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "Skip: within quiet hours."
            exit 0
          fi

          echo "should_run=true" >> $GITHUB_OUTPUT
          echo "Proceeding: outside quiet hours."

      - name: Create runtime .env from Secrets/Variables
        if: steps.gate.outputs.should_run == 'true'
        run: |
          cat > .env <<'EOF'
          SHOPIFY_STORE_DOMAIN=${{ secrets.SHOPIFY_STORE_DOMAIN }}
          SHOPIFY_ADMIN_ACCESS_TOKEN=${{ secrets.SHOPIFY_ADMIN_ACCESS_TOKEN }}
          SHOPIFY_API_VERSION=${{ env.SHOPIFY_API_VERSION }}
          SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID=${{ secrets.SLACK_CHANNEL_ID }}
          DRY_RUN=${{ env.DRY_RUN }}
          SHOPIFY_LOG_GRAPHQL_COSTS=${{ env.SHOPIFY_LOG_GRAPHQL_COSTS }}
          EOF
          echo "Wrote .env"

      - name: Show .env (redacted)
        if: steps.gate.outputs.should_run == 'true'
        run: |
          echo "SHOPIFY_STORE_DOMAIN=$(grep SHOPIFY_STORE_DOMAIN .env | cut -d= -f2-)"
          echo "SHOPIFY_API_VERSION=$(grep SHOPIFY_API_VERSION .env | cut -d= -f2-)"
          echo "DRY_RUN=$(grep DRY_RUN .env | cut -d= -f2-)"
          echo "SHOPIFY_LOG_GRAPHQL_COSTS=$(grep SHOPIFY_LOG_GRAPHQL_COSTS .env | cut -d= -f2-)"

      # Use npm ci if lockfile exists; else fallback to npm install
      - name: Install deps (ci)
        if: steps.gate.outputs.should_run == 'true' && hashFiles('**/package-lock.json') != ''
        run: npm ci --no-audit --no-fund

      - name: Install deps (install fallback)
        if: steps.gate.outputs.should_run == 'true' && hashFiles('**/package-lock.json') == ''
        run: npm install --no-audit --no-fund

      - name: Run script
        if: steps.gate.outputs.should_run == 'true'
        env:
          NODE_OPTIONS: --unhandled-rejections=strict
        run: node index.js
