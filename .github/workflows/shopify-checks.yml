name: Shopify Product Checks

on:
  schedule:
    # GitHub can only tick every 5 minutes; we gate frequency inside the job.
    - cron: "*/5 * * * *"
  workflow_dispatch:
    inputs:
      force:
        description: "Force run now (bypass frequency & quiet hours)"
        required: false
        default: "true"
  push:
    branches:
      - main
      - master

permissions:
  contents: read

env:
  # Optional knobs via Repository Variables; if not set, defaults are used in gate step.
  SHOPIFY_API_VERSION: ${{ vars.SHOPIFY_API_VERSION }}
  DRY_RUN: ${{ vars.DRY_RUN }}
  SHOPIFY_LOG_GRAPHQL_COSTS: ${{ vars.SHOPIFY_LOG_GRAPHQL_COSTS }}
  RUN_EVERY_MINUTES: ${{ vars.RUN_EVERY_MINUTES }}
  QUIET_START_IST: ${{ vars.QUIET_START_IST }}
  QUIET_END_IST: ${{ vars.QUIET_END_IST }}

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 55

    steps:
      - name: Show trigger information
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "manual_force=${{ github.event.inputs.force }}"
          echo "ref=${{ github.ref }}"
          echo "sha=${{ github.sha }}"

      - name: Check out repo
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Frequency & quiet-hours gate (IST), with manual override
        id: gate
        shell: bash
        run: |
          EVENT="${{ github.event_name }}"
          FORCE_INPUT="${{ github.event.inputs.force }}"

          RUN_EVERY_MINUTES="${RUN_EVERY_MINUTES:-10}"
          QUIET_START_IST="${QUIET_START_IST:-8}"
          QUIET_END_IST="${QUIET_END_IST:-23}"

          echo "RUN_EVERY_MINUTES=$RUN_EVERY_MINUTES"
          echo "QUIET_START_IST=$QUIET_START_IST"
          echo "QUIET_END_IST=$QUIET_END_IST"
          echo "EVENT=$EVENT"
          echo "FORCE_INPUT=$FORCE_INPUT"

          # Manual runs or push runs: bypass all gates (always run)
          if [ "$EVENT" = "workflow_dispatch" ] || [ "$EVENT" = "push" ]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "Bypassing gates for event=$EVENT."
            exit 0
          fi

          # Frequency gate for scheduled runs
          EPOCH_MIN=$(( $(date -u +%s) / 60 ))
          if [ $(( EPOCH_MIN % RUN_EVERY_MINUTES )) -ne 0 ]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "Skip (frequency gate): epoch_min=$EPOCH_MIN not divisible by $RUN_EVERY_MINUTES"
            exit 0
          fi

          # Quiet-hours gate (Asia/Kolkata)
          IST_HOUR=$(TZ=Asia/Kolkata date +%H)
          echo "Current IST hour=$IST_HOUR"

          QUIET=0
          if [ "$QUIET_START_IST" -le "$QUIET_END_IST" ]; then
            # same-day window [START, END)
            if [ "$IST_HOUR" -ge "$QUIET_START_IST" ] && [ "$IST_HOUR" -lt "$QUIET_END_IST" ]; then
              QUIET=1
            fi
          else
            # overnight window (e.g., 22 -> 07)
            if [ "$IST_HOUR" -ge "$QUIET_START_IST" ] || [ "$IST_HOUR" -lt "$QUIET_END_IST" ]; then
              QUIET=1
            fi
          fi

          if [ "$QUIET" -eq 1 ]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "Skip (quiet hours)."
            exit 0
          fi

          echo "should_run=true" >> $GITHUB_OUTPUT
          echo "Gates passed; proceeding."

      - name: Create runtime .env from GitHub Secrets/Variables
        if: steps.gate.outputs.should_run == 'true'
        run: |
          cat > .env <<'EOF'
          SHOPIFY_STORE_DOMAIN=${{ secrets.SHOPIFY_STORE_DOMAIN }}
          SHOPIFY_ADMIN_ACCESS_TOKEN=${{ secrets.SHOPIFY_ADMIN_ACCESS_TOKEN }}
          SHOPIFY_API_VERSION=${{ env.SHOPIFY_API_VERSION }}
          SLACK_BOT_TOKEN=${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID=${{ secrets.SLACK_CHANNEL_ID }}
          DRY_RUN=${{ env.DRY_RUN }}
          SHOPIFY_LOG_GRAPHQL_COSTS=${{ env.SHOPIFY_LOG_GRAPHQL_COSTS }}
          EOF
          echo "Wrote .env"

      - name: Show .env (redacted)
        if: steps.gate.outputs.should_run == 'true'
        run: |
          echo "SHOPIFY_STORE_DOMAIN=$(grep SHOPIFY_STORE_DOMAIN .env | cut -d= -f2-)"
          echo "SHOPIFY_API_VERSION=$(grep SHOPIFY_API_VERSION .env | cut -d= -f2-)"
          echo "DRY_RUN=$(grep DRY_RUN .env | cut -d= -f2-)"
          echo "SHOPIFY_LOG_GRAPHQL_COSTS=$(grep SHOPIFY_LOG_GRAPHQL_COSTS .env | cut -d= -f2-)"

      - name: Install deps
        if: steps.gate.outputs.should_run == 'true'
        run: npm ci

      - name: Run script
        if: steps.gate.outputs.should_run == 'true'
        run: node index.js
