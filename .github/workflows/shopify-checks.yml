name: Shopify Product Checks (every 5m)

on:
  schedule:
    # Phase A: 00,10,20,30,40,50 each hour (UTC)
    - cron: "0/10 * * * *"
    # Phase B: 05,15,25,35,45,55 each hour (UTC)
    - cron: "5/10 * * * *"
  # Keep manual trigger for testing. Remove if you never want manual runs.
  workflow_dispatch: {}

permissions:
  contents: read

# Ensure only one run at a time. If phase B fires while phase A is still running,
# the new one will cancel the old one instead of running in parallel.
concurrency:
  group: shopify-product-checks
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Show trigger info & time
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "sha=${{ github.sha }}"
          echo "UTC now: $(date -u '+%Y-%m-%d %H:%M:%S')"

      - name: Check out repo
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Validate required Secrets/Variables
        env:
          SHOPIFY_STORE_DOMAIN: ${{ secrets.SHOPIFY_STORE_DOMAIN || vars.SHOPIFY_STORE_DOMAIN }}
          SHOPIFY_ADMIN_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ADMIN_ACCESS_TOKEN || vars.SHOPIFY_ADMIN_ACCESS_TOKEN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN || vars.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID || vars.SLACK_CHANNEL_ID }}
        run: |
          set -e
          : "${SHOPIFY_STORE_DOMAIN:?Missing SHOPIFY_STORE_DOMAIN (secret or var)}"
          : "${SHOPIFY_ADMIN_ACCESS_TOKEN:?Missing SHOPIFY_ADMIN_ACCESS_TOKEN (secret or var)}"
          : "${SLACK_BOT_TOKEN:?Missing SLACK_BOT_TOKEN (secret or var)}"
          : "${SLACK_CHANNEL_ID:?Missing SLACK_CHANNEL_ID (secret or var)}"
          echo "All required secrets/vars are present."

      - name: Create runtime .env from GitHub Secrets/Variables
        env:
          SHOPIFY_STORE_DOMAIN: ${{ secrets.SHOPIFY_STORE_DOMAIN || vars.SHOPIFY_STORE_DOMAIN }}
          SHOPIFY_ADMIN_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ADMIN_ACCESS_TOKEN || vars.SHOPIFY_ADMIN_ACCESS_TOKEN }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN || vars.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID || vars.SLACK_CHANNEL_ID }}
          SHOPIFY_API_VERSION: ${{ vars.SHOPIFY_API_VERSION }}
          DRY_RUN: ${{ vars.DRY_RUN }}
          SHOPIFY_LOG_GRAPHQL_COSTS: ${{ vars.SHOPIFY_LOG_GRAPHQL_COSTS }}
        run: |
          set -e
          cat > .env <<EOF
          SHOPIFY_STORE_DOMAIN=${SHOPIFY_STORE_DOMAIN}
          SHOPIFY_ADMIN_ACCESS_TOKEN=${SHOPIFY_ADMIN_ACCESS_TOKEN}
          SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
          SLACK_CHANNEL_ID=${SLACK_CHANNEL_ID}
          SHOPIFY_API_VERSION=${SHOPIFY_API_VERSION}
          DRY_RUN=${DRY_RUN}
          SHOPIFY_LOG_GRAPHQL_COSTS=${SHOPIFY_LOG_GRAPHQL_COSTS}
          EOF
          echo ".env created for this run."

      - name: Install deps (ci)
        run: npm ci

      - name: Sanity check Shopify credentials (shop.name)
        env:
          SHOPIFY_STORE_DOMAIN: ${{ secrets.SHOPIFY_STORE_DOMAIN || vars.SHOPIFY_STORE_DOMAIN }}
          SHOPIFY_ADMIN_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ADMIN_ACCESS_TOKEN || vars.SHOPIFY_ADMIN_ACCESS_TOKEN }}
          SHOPIFY_API_VERSION: ${{ vars.SHOPIFY_API_VERSION }}
        run: |
          set -e
          API_VER="${SHOPIFY_API_VERSION:-2025-07}"
          echo "Pinging https://${SHOPIFY_STORE_DOMAIN}/admin/api/${API_VER}/graphql.json ..."
          curl -sS -X POST "https://${SHOPIFY_STORE_DOMAIN}/admin/api/${API_VER}/graphql.json" \
            -H "X-Shopify-Access-Token: ${SHOPIFY_ADMIN_ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            --data '{"query":"{ shop { name } }"}' | tee /tmp/ping.json

      - name: Run script
        run: node index.js
